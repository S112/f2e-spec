(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{389:function(e,t,s){"use strict";s.r(t);var n=s(19),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"使用h5跨端游戏方案-hilo-实现h5接粽子游戏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用h5跨端游戏方案-hilo-实现h5接粽子游戏"}},[e._v("#")]),e._v(" 使用H5跨端游戏方案 Hilo，实现H5接粽子游戏")]),e._v(" "),s("h4",{attrs:{id:"一-所用到的hilo相关的类-hilo官方文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-所用到的hilo相关的类-hilo官方文档"}},[e._v("#")]),e._v(" 一. 所用到的Hilo相关的类 "),s("a",{attrs:{href:"https://hiloteam.github.io/Hilo/docs/api-zh/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hilo官方文档"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Hilo.Stage：")]),e._v(" 舞台是可视对象树的根（相当游戏基础canvas），可视对象只有添加到舞台或其子对象后才会被渲染出来。创建一个hilo应用一般都是从创建一个stage开始的。")]),e._v(" "),s("li",[s("strong",[e._v("Hilo.Class.create：")]),e._v(" 创建各个相应的类")]),e._v(" "),s("li",[s("strong",[e._v("Hilo.EventMixin：")]),e._v(" 事件相关功能（fire、off、on）")]),e._v(" "),s("li",[s("strong",[e._v("Hilo.LoadQueue：")]),e._v(" 队列下载")]),e._v(" "),s("li",[s("strong",[e._v("Hilo.Tween：")]),e._v(" 动画")]),e._v(" "),s("li",[s("strong",[e._v("Hilo.Bitmap：")]),e._v(" 图像")]),e._v(" "),s("li",[s("strong",[e._v("Hilo.Ticker：")]),e._v(" 定时器（可以按指定帧率重复运行、默认60）")])]),e._v(" "),s("h4",{attrs:{id:"二-文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-文件结构"}},[e._v("#")]),e._v(" 二. 文件结构：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("├── views\n│   |── game\n│   │   |── Asset.js\n│   │   |── Game.js\n│   │   |── index.vue\n│   │   |── Zongzi.js\n")])])]),s("h4",{attrs:{id:"三-实现思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-实现思路"}},[e._v("#")]),e._v(" 三. 实现思路：")]),e._v(" "),s("ol",[s("li",[s("strong",[e._v("资源加载（Asset.js）")]),s("br"),e._v("\n(1) 创建一个下载队列 LoadQueue"),s("br"),e._v(" "),s("code",[e._v("this.queue = new Hilo.LoadQueue();")]),s("br"),e._v("\n如果要下载的图片多的话，可以配置参数 maxConnections（maxConnections），默认值是2。\n"),s("code",[e._v("this.queue.maxConnections = 10;")]),s("br"),e._v(" "),s("code",[e._v("this.queue.add(this.imgs);")]),s("br"),e._v("\n监听队列加载完成，如果complete，则执行回调函数onComplete。"),s("br"),e._v(" "),s("code",[e._v("this.queue.on('complete', this.onComplete.bind(this));")]),s("br"),e._v(" "),s("code",[e._v("this.queue.start();")]),s("br"),e._v("\nonComplete方法，是把相应的资源缓存起来，删除下载队列的complete事件，并向Game.js推送消息 loadAsset-complete，整个资源加载完成了。")])]),e._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[e._v("onComplete () {\n    this.bg = this.queue.get('bg').content;\n    ......\n\n    this.queue.off('complete');\n    this.fire('loadAsset-complete');\n}\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[e._v("生成粽子、爆竹小道具（Zongzi.js）")]),s("br"),e._v("\n之前在 Asset.js 加载好的粽子、和爆竹图片，会存到 zongziList 数组中，使用Hilo.Bitmap类，将图片转换成相应的canvas。")])]),e._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[e._v("const zongzi = new Hilo.Bitmap({\n    image: this.zongziList[index].item,\n    rect: [0, 0, this.zongziList[index].item.width, this.zongziList[index].item.height]\n}).addTo(this);\n")])])]),s("p",[e._v("通过 setInterval，会随机的从 zongziList 数组中抽取 粽子 或 爆竹。")]),e._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[e._v("startCreateZongzi() {\n    this.creatZongzi();\n    this.timer = setInterval(() => {\n        this.creatZongzi();\n    }, this.createSpeed);\n},\n")])])]),s("p",[e._v("当道具的y值大于游戏界面的height值时，销毁它。")]),e._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[e._v("zongzi.over = function() {\n    this.removeFromParent();\n};\nzongzi.onUpdate = function() {\n    if (this.parent.height < this.y) {\n        this.removeFromParent();\n    }\n};\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[e._v("游戏配置（Game.js）")]),s("br"),e._v("\n首先会监听loadAsset-complete事件，如果资源（图片、声音等）加载完成，进行游戏初始化，创建游戏舞台stage。")])]),e._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[e._v("init() {\n    this.asset.on('loadAsset-complete', function() {\n        this.asset.off('loadAsset-complete');\n        this.initStage();\n    }.bind(this));\n    this.asset.loadAsset();\n},\n")])])]),s("p",[e._v("游戏舞台stage，相当于游戏的壳子，在这个壳子中进行游戏的实现，选用的渲染方式是canvas，stage.enableDOMEvent 方法作用是开启舞台的DOM的事件响应，这样手势操作、鼠标滑动等事件才能监听到。\n然后对游戏背景、龙舟、粽子（爆竹）进行绘制，并开启游戏的定时器。")]),e._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[e._v("initStage() {\n    this.stage = new Hilo.Stage({\n        renderType: 'canvas',\n        container: this.page,\n        ....\n    });\n    this.stage.enableDOMEvent([Hilo.event.POINTER_START, Hilo.event.POINTER_MOVE, Hilo.event.POINTER_END]);\n\n    this.initBg();\n    this.initTick();\n    this.initBoat();\n    this.initZongzi();\n    this.startGame();\n},\n")])])]),s("p",[e._v("对游戏舞台stage的实时的进行更新，并碰撞检测")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("onUpdate() { // 舞台更新\n    if (this.gameStatus === 'ready') {\n        return;\n    }\n\n    this.zongzi.children.forEach(item => {\n        if (['firecracker1', 'firecracker2'].includes(item.name)) {\n            if (this.hitTestFirecracker(this.boat, item, false)) {\n                this.gameOver();\n            }\n        } else {\n            if (item.hitTestObject(this.boat, false)) {\n                item.over();\n                this.score += 1;\n            }\n        }\n    });\n}\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);